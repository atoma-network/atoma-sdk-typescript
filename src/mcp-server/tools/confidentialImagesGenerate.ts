/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { confidentialImagesGenerate } from "../../funcs/confidentialImagesGenerate.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.CreateImageRequest$inboundSchema,
};

export const tool$confidentialImagesGenerate: ToolDefinition<typeof args> = {
  name: "confidential-images-generate",
  description: `Create confidential image

This handler processes image generation requests in a confidential manner, providing additional
encryption and security measures for sensitive data processing. It supports both streaming and
non-streaming responses while maintaining data confidentiality through AEAD encryption and TEE hardware,
for full private AI compute.`,
  args,
  tool: async (client, args, ctx) => {
    const result = await confidentialImagesGenerate(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    );

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(result.value, {});
  },
};
