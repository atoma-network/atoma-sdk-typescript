/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Represents the image URL of a message content part.
 *
 * @remarks
 *
 * This is used to represent the image URL of a message content part in the chat completion request.
 * It can be either a URL or a base64 encoded image data.
 */
export type MessageContentPartImageUrl = {
  /**
   * Specifies the detail level of the image.
   */
  detail?: string | null | undefined;
  /**
   * Either a URL of the image or the base64 encoded image data.
   */
  url: string;
};

/** @internal */
export const MessageContentPartImageUrl$inboundSchema: z.ZodType<
  MessageContentPartImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  detail: z.nullable(z.string()).optional(),
  url: z.string(),
});

/** @internal */
export type MessageContentPartImageUrl$Outbound = {
  detail?: string | null | undefined;
  url: string;
};

/** @internal */
export const MessageContentPartImageUrl$outboundSchema: z.ZodType<
  MessageContentPartImageUrl$Outbound,
  z.ZodTypeDef,
  MessageContentPartImageUrl
> = z.object({
  detail: z.nullable(z.string()).optional(),
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageContentPartImageUrl$ {
  /** @deprecated use `MessageContentPartImageUrl$inboundSchema` instead. */
  export const inboundSchema = MessageContentPartImageUrl$inboundSchema;
  /** @deprecated use `MessageContentPartImageUrl$outboundSchema` instead. */
  export const outboundSchema = MessageContentPartImageUrl$outboundSchema;
  /** @deprecated use `MessageContentPartImageUrl$Outbound` instead. */
  export type Outbound = MessageContentPartImageUrl$Outbound;
}

export function messageContentPartImageUrlToJSON(
  messageContentPartImageUrl: MessageContentPartImageUrl,
): string {
  return JSON.stringify(
    MessageContentPartImageUrl$outboundSchema.parse(messageContentPartImageUrl),
  );
}

export function messageContentPartImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<MessageContentPartImageUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MessageContentPartImageUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MessageContentPartImageUrl' from JSON`,
  );
}
