/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ChatCompletionToolFunctionParam,
  ChatCompletionToolFunctionParam$inboundSchema,
  ChatCompletionToolFunctionParam$Outbound,
  ChatCompletionToolFunctionParam$outboundSchema,
} from "./chatcompletiontoolfunctionparam.js";

/**
 * A tool that can be used in a chat completion.
 */
export type ChatCompletionToolsParam = {
  /**
   * A function that can be used in a chat completion.
   */
  function: ChatCompletionToolFunctionParam;
  /**
   * The type of the tool.
   */
  type: string;
};

/** @internal */
export const ChatCompletionToolsParam$inboundSchema: z.ZodType<
  ChatCompletionToolsParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  function: ChatCompletionToolFunctionParam$inboundSchema,
  type: z.string(),
});

/** @internal */
export type ChatCompletionToolsParam$Outbound = {
  function: ChatCompletionToolFunctionParam$Outbound;
  type: string;
};

/** @internal */
export const ChatCompletionToolsParam$outboundSchema: z.ZodType<
  ChatCompletionToolsParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionToolsParam
> = z.object({
  function: ChatCompletionToolFunctionParam$outboundSchema,
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionToolsParam$ {
  /** @deprecated use `ChatCompletionToolsParam$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionToolsParam$inboundSchema;
  /** @deprecated use `ChatCompletionToolsParam$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionToolsParam$outboundSchema;
  /** @deprecated use `ChatCompletionToolsParam$Outbound` instead. */
  export type Outbound = ChatCompletionToolsParam$Outbound;
}

export function chatCompletionToolsParamToJSON(
  chatCompletionToolsParam: ChatCompletionToolsParam,
): string {
  return JSON.stringify(
    ChatCompletionToolsParam$outboundSchema.parse(chatCompletionToolsParam),
  );
}

export function chatCompletionToolsParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionToolsParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionToolsParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionToolsParam' from JSON`,
  );
}
