/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ChatCompletionLogProbsContent,
  ChatCompletionLogProbsContent$inboundSchema,
  ChatCompletionLogProbsContent$Outbound,
  ChatCompletionLogProbsContent$outboundSchema,
} from "./chatcompletionlogprobscontent.js";

/**
 * Represents the chat completion log probs.
 *
 * @remarks
 *
 * This is used to represent the chat completion log probs in the chat completion request.
 * It can be either a chat completion log probs or a chat completion log probs choice.
 */
export type ChatCompletionLogProbs = {
  /**
   * The log probs of the chat completion.
   */
  content?: Array<ChatCompletionLogProbsContent> | null | undefined;
};

/** @internal */
export const ChatCompletionLogProbs$inboundSchema: z.ZodType<
  ChatCompletionLogProbs,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.nullable(z.array(ChatCompletionLogProbsContent$inboundSchema))
    .optional(),
});

/** @internal */
export type ChatCompletionLogProbs$Outbound = {
  content?: Array<ChatCompletionLogProbsContent$Outbound> | null | undefined;
};

/** @internal */
export const ChatCompletionLogProbs$outboundSchema: z.ZodType<
  ChatCompletionLogProbs$Outbound,
  z.ZodTypeDef,
  ChatCompletionLogProbs
> = z.object({
  content: z.nullable(z.array(ChatCompletionLogProbsContent$outboundSchema))
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionLogProbs$ {
  /** @deprecated use `ChatCompletionLogProbs$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionLogProbs$inboundSchema;
  /** @deprecated use `ChatCompletionLogProbs$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionLogProbs$outboundSchema;
  /** @deprecated use `ChatCompletionLogProbs$Outbound` instead. */
  export type Outbound = ChatCompletionLogProbs$Outbound;
}

export function chatCompletionLogProbsToJSON(
  chatCompletionLogProbs: ChatCompletionLogProbs,
): string {
  return JSON.stringify(
    ChatCompletionLogProbs$outboundSchema.parse(chatCompletionLogProbs),
  );
}

export function chatCompletionLogProbsFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionLogProbs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionLogProbs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionLogProbs' from JSON`,
  );
}
