/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ChatCompletionNamedFunction,
  ChatCompletionNamedFunction$inboundSchema,
  ChatCompletionNamedFunction$Outbound,
  ChatCompletionNamedFunction$outboundSchema,
} from "./chatcompletionnamedfunction.js";

/**
 * A named tool choice that can be used in a chat completion.
 *
 * @remarks
 *
 * This is used to represent the named tool choice in the chat completion request.
 */
export type ChatCompletionNamedToolChoiceParam = {
  /**
   * A named function that can be used in a chat completion.
   *
   * @remarks
   *
   * This is used to represent the named function in the chat completion request.
   */
  function: ChatCompletionNamedFunction;
  /**
   * The type of the tool choice.
   */
  type: string;
};

/** @internal */
export const ChatCompletionNamedToolChoiceParam$inboundSchema: z.ZodType<
  ChatCompletionNamedToolChoiceParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  function: ChatCompletionNamedFunction$inboundSchema,
  type: z.string(),
});

/** @internal */
export type ChatCompletionNamedToolChoiceParam$Outbound = {
  function: ChatCompletionNamedFunction$Outbound;
  type: string;
};

/** @internal */
export const ChatCompletionNamedToolChoiceParam$outboundSchema: z.ZodType<
  ChatCompletionNamedToolChoiceParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionNamedToolChoiceParam
> = z.object({
  function: ChatCompletionNamedFunction$outboundSchema,
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionNamedToolChoiceParam$ {
  /** @deprecated use `ChatCompletionNamedToolChoiceParam$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionNamedToolChoiceParam$inboundSchema;
  /** @deprecated use `ChatCompletionNamedToolChoiceParam$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionNamedToolChoiceParam$outboundSchema;
  /** @deprecated use `ChatCompletionNamedToolChoiceParam$Outbound` instead. */
  export type Outbound = ChatCompletionNamedToolChoiceParam$Outbound;
}

export function chatCompletionNamedToolChoiceParamToJSON(
  chatCompletionNamedToolChoiceParam: ChatCompletionNamedToolChoiceParam,
): string {
  return JSON.stringify(
    ChatCompletionNamedToolChoiceParam$outboundSchema.parse(
      chatCompletionNamedToolChoiceParam,
    ),
  );
}

export function chatCompletionNamedToolChoiceParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionNamedToolChoiceParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionNamedToolChoiceParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionNamedToolChoiceParam' from JSON`,
  );
}
