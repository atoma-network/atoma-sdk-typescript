/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * A named function that can be used in a chat completion.
 *
 * @remarks
 *
 * This is used to represent the named function in the chat completion request.
 */
export type ChatCompletionNamedFunction = {
  /**
   * The name of the function.
   */
  name: string;
};

/** @internal */
export const ChatCompletionNamedFunction$inboundSchema: z.ZodType<
  ChatCompletionNamedFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type ChatCompletionNamedFunction$Outbound = {
  name: string;
};

/** @internal */
export const ChatCompletionNamedFunction$outboundSchema: z.ZodType<
  ChatCompletionNamedFunction$Outbound,
  z.ZodTypeDef,
  ChatCompletionNamedFunction
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionNamedFunction$ {
  /** @deprecated use `ChatCompletionNamedFunction$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionNamedFunction$inboundSchema;
  /** @deprecated use `ChatCompletionNamedFunction$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionNamedFunction$outboundSchema;
  /** @deprecated use `ChatCompletionNamedFunction$Outbound` instead. */
  export type Outbound = ChatCompletionNamedFunction$Outbound;
}

export function chatCompletionNamedFunctionToJSON(
  chatCompletionNamedFunction: ChatCompletionNamedFunction,
): string {
  return JSON.stringify(
    ChatCompletionNamedFunction$outboundSchema.parse(
      chatCompletionNamedFunction,
    ),
  );
}

export function chatCompletionNamedFunctionFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionNamedFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionNamedFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionNamedFunction' from JSON`,
  );
}
