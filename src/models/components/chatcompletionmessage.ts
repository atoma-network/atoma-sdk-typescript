/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatCompletionMessage = {
  /**
   * The contents of the message
   */
  content: string;
  /**
   * The name of the author of this message
   */
  name?: string | null | undefined;
  /**
   * The role of the message author. One of: "system", "user", "assistant", "tool", or "function"
   */
  role: string;
};

/** @internal */
export const ChatCompletionMessage$inboundSchema: z.ZodType<
  ChatCompletionMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.string(),
  name: z.nullable(z.string()).optional(),
  role: z.string(),
});

/** @internal */
export type ChatCompletionMessage$Outbound = {
  content: string;
  name?: string | null | undefined;
  role: string;
};

/** @internal */
export const ChatCompletionMessage$outboundSchema: z.ZodType<
  ChatCompletionMessage$Outbound,
  z.ZodTypeDef,
  ChatCompletionMessage
> = z.object({
  content: z.string(),
  name: z.nullable(z.string()).optional(),
  role: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionMessage$ {
  /** @deprecated use `ChatCompletionMessage$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionMessage$inboundSchema;
  /** @deprecated use `ChatCompletionMessage$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionMessage$outboundSchema;
  /** @deprecated use `ChatCompletionMessage$Outbound` instead. */
  export type Outbound = ChatCompletionMessage$Outbound;
}

export function chatCompletionMessageToJSON(
  chatCompletionMessage: ChatCompletionMessage,
): string {
  return JSON.stringify(
    ChatCompletionMessage$outboundSchema.parse(chatCompletionMessage),
  );
}

export function chatCompletionMessageFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionMessage' from JSON`,
  );
}
