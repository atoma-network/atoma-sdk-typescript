/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Represents the chat completion chunk delta tool call function.
 *
 * @remarks
 *
 * This is used to represent the chat completion chunk delta tool call function in the chat completion request.
 * It can be either a chat completion chunk delta tool call function or a chat completion chunk delta tool call function arguments.
 */
export type ChatCompletionChunkDeltaToolCallFunction = {
  /**
   * The arguments of the tool call function.
   */
  arguments?: string | null | undefined;
  /**
   * The name of the tool call function.
   */
  name?: string | null | undefined;
};

/** @internal */
export const ChatCompletionChunkDeltaToolCallFunction$inboundSchema: z.ZodType<
  ChatCompletionChunkDeltaToolCallFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  arguments: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type ChatCompletionChunkDeltaToolCallFunction$Outbound = {
  arguments?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const ChatCompletionChunkDeltaToolCallFunction$outboundSchema: z.ZodType<
  ChatCompletionChunkDeltaToolCallFunction$Outbound,
  z.ZodTypeDef,
  ChatCompletionChunkDeltaToolCallFunction
> = z.object({
  arguments: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionChunkDeltaToolCallFunction$ {
  /** @deprecated use `ChatCompletionChunkDeltaToolCallFunction$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionChunkDeltaToolCallFunction$inboundSchema;
  /** @deprecated use `ChatCompletionChunkDeltaToolCallFunction$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionChunkDeltaToolCallFunction$outboundSchema;
  /** @deprecated use `ChatCompletionChunkDeltaToolCallFunction$Outbound` instead. */
  export type Outbound = ChatCompletionChunkDeltaToolCallFunction$Outbound;
}

export function chatCompletionChunkDeltaToolCallFunctionToJSON(
  chatCompletionChunkDeltaToolCallFunction:
    ChatCompletionChunkDeltaToolCallFunction,
): string {
  return JSON.stringify(
    ChatCompletionChunkDeltaToolCallFunction$outboundSchema.parse(
      chatCompletionChunkDeltaToolCallFunction,
    ),
  );
}

export function chatCompletionChunkDeltaToolCallFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatCompletionChunkDeltaToolCallFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionChunkDeltaToolCallFunction$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatCompletionChunkDeltaToolCallFunction' from JSON`,
  );
}
