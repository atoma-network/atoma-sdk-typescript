/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NodesModelsRetrieveRequest = {
  /**
   * The name of the model to retrieve
   */
  model: string;
};

/** @internal */
export const NodesModelsRetrieveRequest$inboundSchema: z.ZodType<
  NodesModelsRetrieveRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  model: z.string(),
});

/** @internal */
export type NodesModelsRetrieveRequest$Outbound = {
  model: string;
};

/** @internal */
export const NodesModelsRetrieveRequest$outboundSchema: z.ZodType<
  NodesModelsRetrieveRequest$Outbound,
  z.ZodTypeDef,
  NodesModelsRetrieveRequest
> = z.object({
  model: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NodesModelsRetrieveRequest$ {
  /** @deprecated use `NodesModelsRetrieveRequest$inboundSchema` instead. */
  export const inboundSchema = NodesModelsRetrieveRequest$inboundSchema;
  /** @deprecated use `NodesModelsRetrieveRequest$outboundSchema` instead. */
  export const outboundSchema = NodesModelsRetrieveRequest$outboundSchema;
  /** @deprecated use `NodesModelsRetrieveRequest$Outbound` instead. */
  export type Outbound = NodesModelsRetrieveRequest$Outbound;
}

export function nodesModelsRetrieveRequestToJSON(
  nodesModelsRetrieveRequest: NodesModelsRetrieveRequest,
): string {
  return JSON.stringify(
    NodesModelsRetrieveRequest$outboundSchema.parse(nodesModelsRetrieveRequest),
  );
}

export function nodesModelsRetrieveRequestFromJSON(
  jsonString: string,
): SafeParseResult<NodesModelsRetrieveRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NodesModelsRetrieveRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NodesModelsRetrieveRequest' from JSON`,
  );
}
