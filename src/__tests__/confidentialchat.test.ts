/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assert, expect, it, test } from "vitest";
import { AtomaSDK } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Confidential Chat Confidential Chat Completions Create", async () => {
  const testHttpClient = createTestHTTPClient(
    "confidential_chat_completions_create",
  );

  const atomaSDK = new AtomaSDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["ATOMASDK_BEARER_AUTH"] ?? "value",
  });

  const result = await atomaSDK.confidentialChat.create({
    messages: [{ role: "user", content: "Hello" }],
    model: "gpt-3.5-turbo",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "chatcmpl-123",
    object: "chat.completion",
    created: 1677652288,
    model: "gpt-3.5-turbo",
    choices: [{
      index: 0,
      message: { role: "assistant", content: "Hi there!" },
      finish_reason: "stop"
    }],
    usage: {
      prompt_tokens: 9,
      completion_tokens: 12,
      total_tokens: 21
    }
  });
});

it.skip("Confidential Chat Confidential Chat Completions Create Stream", async () => {
  assert.fail(
    "incomplete test found please make sure to address the following errors: [`workflow step confidential_chat_completions_create_stream.test referencing operation confidential_chat_completions_create_stream is not currently supported`]",
  );
});
