/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { AtomaSDK } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Nodes Nodes Create", async () => {
  const testHttpClient = createTestHTTPClient("nodes_create");

  const atomaSDK = new AtomaSDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["ATOMASDK_BEARER_AUTH"] ?? "value",
  });

  const result = await atomaSDK.nodes.nodesCreate({
    data: {
      country: "Andorra",
      nodeSmallId: 3665,
      publicAddress: "<value>",
    },
    signature: "<value>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    message: "<value>",
  });
});

test("Nodes Nodes Create Lock", async () => {
  const testHttpClient = createTestHTTPClient("nodes_create_lock");

  const atomaSDK = new AtomaSDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["ATOMASDK_BEARER_AUTH"] ?? "value",
  });

  const result = await atomaSDK.nodes.nodesCreateLock({
    model: "Focus",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    nodeSmallId: 248208,
    publicKey: "<value>",
    stackSmallId: 863000,
  });
});
