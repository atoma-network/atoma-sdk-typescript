/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { AtomaSDK } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Embeddings Embeddings Create", async () => {
  const testHttpClient = createTestHTTPClient("embeddings_create");

  const atomaSDK = new AtomaSDK({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    bearerAuth: process.env["ATOMASDK_BEARER_AUTH"] ?? "value",
  });

  const result = await atomaSDK.embeddings.create({
    encodingFormat: "float",
    input: "The quick brown fox jumped over the lazy dog",
    model: "intfloat/multilingual-e5-large-instruct",
    user: "user-1234",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    data: [
      {
        embedding: [
          [0.0023064255, -0.009327292],
        ],
        index: 0,
        object: "embedding",
      },
      {
        embedding: [
          [0.0023064255, -0.009327292],
        ],
        index: 0,
        object: "embedding",
      },
    ],
    model: "intfloat/multilingual-e5-large-instruct",
    object: "list",
    usage: {
      promptTokens: 8,
      totalTokens: 8,
    },
  });
});
